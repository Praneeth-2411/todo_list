{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOSEPHWILSON\\\\todo_list\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const res = await axios.get('http://localhost:5167/tasks');\n        setTasks(res.data);\n      } catch (error) {\n        console.error(error);\n        alert('Error fetching tasks');\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5167/tasks/${id}`);\n      setTasks(tasks.filter(task => task.id !== id)); // Remove task from UI\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      alert('Error deleting task');\n    }\n  };\n  const toggleTaskCompletion = async (taskId, currentStatus) => {\n    try {\n      const response = await fetch(`http://localhost:5167/tasks/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          completed: !currentStatus\n        }),\n        mode: \"cors\" // Toggle status\n      });\n      if (response.ok) {\n        // Update UI after successful request\n        setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n          ...task,\n          completed: !currentStatus\n        } : task));\n      } else {\n        console.error(\"Error updating task\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.task_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(task.due_date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.completed ? '✅' : '❌'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleTaskCompletion(task.id, task.completed),\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete\",\n              onClick: () => handleDelete(task.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","fetchTasks","res","get","data","error","console","alert","handleDelete","id","delete","filter","task","toggleTaskCompletion","taskId","currentStatus","response","fetch","method","headers","body","JSON","stringify","completed","mode","ok","prevTasks","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","task_name","Date","due_date","toLocaleDateString","category","onClick","_c","$RefreshReg$"],"sources":["C:/Users/JOSEPHWILSON/todo_list/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5167/tasks');\r\n        setTasks(res.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert('Error fetching tasks');\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5167/tasks/${id}`);\r\n      setTasks(tasks.filter(task => task.id !== id)); // Remove task from UI\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n      alert('Error deleting task');\r\n    }\r\n  };\r\n  const toggleTaskCompletion = async (taskId, currentStatus) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5167/tasks/${taskId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ completed: !currentStatus }),\r\n        mode: \"cors\", // Toggle status\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // Update UI after successful request\r\n        setTasks((prevTasks) =>\r\n          prevTasks.map((task) =>\r\n            task.id === taskId ? { ...task, completed: !currentStatus } : task\r\n          )\r\n        );\r\n      } else {\r\n        console.error(\"Error updating task\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      <h2>Task List</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Task Name</th>\r\n            <th>Due Date</th>\r\n            <th>Category</th>\r\n            <th>Completed</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks.map((task) => (\r\n            <tr key={task.id}>\r\n              <td>{task.task_name}</td>\r\n              <td>{new Date(task.due_date).toLocaleDateString()}</td>\r\n              <td>{task.category}</td>\r\n              <td>{task.completed ? '✅' : '❌'}</td>\r\n              <td>\r\n              <button onClick={() => toggleTaskCompletion(task.id, task.completed)}>Completed</button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"delete\"\r\n                  onClick={() => handleDelete(task.id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}