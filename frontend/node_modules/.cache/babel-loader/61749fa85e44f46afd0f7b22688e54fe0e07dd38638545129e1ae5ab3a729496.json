{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOSEPHWILSON\\\\todo_list\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { jwtDecode } from \"jwt-decode\"; // ✅ To decode Google JWT token\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../styles/login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory(); // ✅ Correct navigation method\n\n  // ✅ Google Authentication Success Handler\n  const googleSuccess = async response => {\n    try {\n      const decodedToken = jwtDecode(response.credential); // Decode Google JWT token\n      console.log(\"Google login success:\", decodedToken);\n      const res = await axios.post(\"http://localhost:5123/auth/login\", {\n        username,\n        password\n      });\n      const {\n        user_id\n      } = res.data;\n      if (user_id) {\n        localStorage.setItem(\"user_id\", String(user_id));\n        history.push(\"/addtask\"); // ✅ Redirect to add task page\n      }\n    } catch (error) {\n      console.error(\"Error with Google login:\", error);\n      alert(\"Google Sign-In failed. Try again later.\");\n    }\n  };\n\n  // ❌ Google Authentication Failure Handler\n  const googleFailure = () => {\n    console.log(\"Google Sign-In was unsuccessful. Try again later\");\n  };\n\n  // ✅ Manual Login Submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const loginRes = await axios.post(\"http://localhost:5123/auth/login\", {\n        username,\n        password\n      });\n      const {\n        user_id\n      } = loginRes.data;\n      if (user_id) {\n        localStorage.setItem(\"user_id\", String(user_id));\n        history.push(\"/addtask\");\n      }\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n      alert(\"Login failed\");\n    }\n  };\n  // Removed duplicate googleSuccess function\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"login-back-button\",\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: googleSuccess,\n          onError: googleFailure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lauth-quote\",\n      children: \"\\\"People's dreams never END!\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lauth\",\n      children: \"- Marshall D. Teach\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"/nE+1o6xRAtcM7F1DwdqQmRYBrw=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","GoogleLogin","jwtDecode","Link","useHistory","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","history","googleSuccess","response","decodedToken","credential","console","log","res","post","user_id","data","localStorage","setItem","String","push","error","alert","googleFailure","handleSubmit","e","preventDefault","loginRes","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onSuccess","onError","_c","$RefreshReg$"],"sources":["C:/Users/JOSEPHWILSON/todo_list/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport { jwtDecode } from \"jwt-decode\"; // ✅ To decode Google JWT token\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"../styles/login.css\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory(); // ✅ Correct navigation method\r\n\r\n  // ✅ Google Authentication Success Handler\r\n  const googleSuccess = async (response) => {\r\n    try {\r\n      const decodedToken = jwtDecode(response.credential); // Decode Google JWT token\r\n      console.log(\"Google login success:\", decodedToken);\r\n      const res = await axios.post(\"http://localhost:5123/auth/login\", { username, password });\r\n\r\n      const { user_id } = res.data;\r\n      if (user_id) {\r\n        localStorage.setItem(\"user_id\", String(user_id));\r\n        history.push(\"/addtask\"); // ✅ Redirect to add task page\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error with Google login:\", error);\r\n      alert(\"Google Sign-In failed. Try again later.\");\r\n    }\r\n  };\r\n\r\n  // ❌ Google Authentication Failure Handler\r\n  const googleFailure = () => {\r\n    console.log(\"Google Sign-In was unsuccessful. Try again later\");\r\n  };\r\n\r\n  // ✅ Manual Login Submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const loginRes = await axios.post(\"http://localhost:5123/auth/login\", {\r\n        username,\r\n        password,\r\n      });\r\n  \r\n      const { user_id } = loginRes.data;\r\n      if (user_id) {\r\n        localStorage.setItem(\"user_id\", String(user_id));\r\n        history.push(\"/addtask\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error logging in:\", error);\r\n      alert(\"Login failed\");\r\n    }\r\n  };\r\n  // Removed duplicate googleSuccess function\r\n  return (\r\n    <div className=\"login-container\">\r\n      <Link to=\"/\" className=\"login-back-button\">← Back</Link>\r\n      <div className=\"login-form\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">Log In</button>\r\n\r\n          {/* ✅ Google Login Button */}\r\n          <GoogleLogin\r\n            onSuccess={googleSuccess}\r\n            onError={googleFailure}\r\n          />\r\n        </form>\r\n      </div>\r\n      <p className=\"lauth-quote\">\"People's dreams never END!\"</p>\r\n      <p className=\"lauth\">- Marshall D. Teach</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}