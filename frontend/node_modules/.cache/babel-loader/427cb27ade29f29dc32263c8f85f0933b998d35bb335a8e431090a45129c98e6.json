{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOSEPHWILSON\\\\todo_list\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { jwtDecode } from \"jwt-decode\"; // ✅ To decode Google JWT token\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../styles/login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isNewUser, setIsNewUser] = useState(false); // ✅ Add isNewUser state\n  const history = useHistory(); // ✅ Correct navigation method\n\n  // ✅ Google Authentication Success Handler\n  const googleSuccess = async response => {\n    try {\n      const res = await axios.post('/auth/google-login', {\n        token: response.credential\n      });\n      if (res.status === 201) {\n        // New user: Signup successful\n        setIsNewUser(true);\n        alert('Signup successful! Welcome to the app.');\n      } else if (res.status === 200) {\n        // Existing user: Login successful\n        setIsNewUser(false);\n        alert('Login successful!');\n      }\n\n      // Store user data and token\n      localStorage.setItem('userToken', res.data.token);\n      localStorage.setItem('user_id', res.data.user.id);\n      localStorage.setItem('userData', JSON.stringify(res.data.user));\n\n      // Redirect to the desired page\n      history.push('/addtask');\n    } catch (error) {\n      console.error('Google Sign-In Error:', error);\n      alert('An error occurred during Google Sign-In. Please try again.');\n    }\n  };\n\n  // ❌ Google Authentication Failure Handler\n  const googleFailure = () => {\n    console.log(\"Google Sign-In was unsuccessful. Try again later\");\n  };\n\n  // ✅ Manual Login Submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const loginRes = await axios.post(\"http://localhost:5123/auth/login\", {\n        username,\n        password\n      });\n      const {\n        user_id\n      } = loginRes.data;\n      if (user_id) {\n        localStorage.setItem(\"user_id\", String(user_id));\n        history.push(\"/addtask\");\n      }\n    } catch (error) {\n      console.error(\"Error logging in:\", error);\n      alert(\"Login failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"login-back-button\",\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: googleSuccess,\n          onError: googleFailure,\n          clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID // Use environment variable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), isNewUser && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"welcome-message\",\n        children: \"Welcome! Your account has been created.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lauth-quote\",\n      children: \"\\\"People's dreams never END!\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lauth\",\n      children: \"- Marshall D. Teach\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"F2BnwNGS0mqfkGt44F+T7rHiCUw=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","GoogleLogin","jwtDecode","Link","useHistory","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","isNewUser","setIsNewUser","history","googleSuccess","response","res","post","token","credential","status","alert","localStorage","setItem","data","user","id","JSON","stringify","push","error","console","googleFailure","log","handleSubmit","e","preventDefault","loginRes","user_id","String","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onSuccess","onError","clientId","process","env","REACT_APP_GOOGLE_CLIENT_ID","_c","$RefreshReg$"],"sources":["C:/Users/JOSEPHWILSON/todo_list/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport { jwtDecode } from \"jwt-decode\"; // ✅ To decode Google JWT token\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"../styles/login.css\";\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isNewUser, setIsNewUser] = useState(false); // ✅ Add isNewUser state\r\n  const history = useHistory(); // ✅ Correct navigation method\r\n\r\n  // ✅ Google Authentication Success Handler\r\n  const googleSuccess = async (response) => {\r\n    try {\r\n      const res = await axios.post('/auth/google-login', {\r\n        token: response.credential,\r\n      });\r\n\r\n      if (res.status === 201) {\r\n        // New user: Signup successful\r\n        setIsNewUser(true);\r\n        alert('Signup successful! Welcome to the app.');\r\n      } else if (res.status === 200) {\r\n        // Existing user: Login successful\r\n        setIsNewUser(false);\r\n        alert('Login successful!');\r\n      }\r\n\r\n      // Store user data and token\r\n      localStorage.setItem('userToken', res.data.token);\r\n      localStorage.setItem('user_id', res.data.user.id);\r\n      localStorage.setItem('userData', JSON.stringify(res.data.user));\r\n\r\n      // Redirect to the desired page\r\n      history.push('/addtask');\r\n    } catch (error) {\r\n      console.error('Google Sign-In Error:', error);\r\n      alert('An error occurred during Google Sign-In. Please try again.');\r\n    }\r\n  };\r\n\r\n  // ❌ Google Authentication Failure Handler\r\n  const googleFailure = () => {\r\n    console.log(\"Google Sign-In was unsuccessful. Try again later\");\r\n  };\r\n\r\n  // ✅ Manual Login Submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const loginRes = await axios.post(\"http://localhost:5123/auth/login\", {\r\n        username,\r\n        password,\r\n      });\r\n\r\n      const { user_id } = loginRes.data;\r\n      if (user_id) {\r\n        localStorage.setItem(\"user_id\", String(user_id));\r\n        history.push(\"/addtask\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error logging in:\", error);\r\n      alert(\"Login failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <Link to=\"/\" className=\"login-back-button\">← Back</Link>\r\n      <div className=\"login-form\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">Log In</button>\r\n\r\n          {/* ✅ Google Login Button with clientId */}\r\n          <GoogleLogin\r\n            onSuccess={googleSuccess}\r\n            onError={googleFailure}\r\n            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID} // Use environment variable\r\n          />\r\n        </form>\r\n\r\n        {/* ✅ Display welcome message for new users */}\r\n        {isNewUser && (\r\n          <p className=\"welcome-message\">Welcome! Your account has been created.</p>\r\n        )}\r\n      </div>\r\n      <p className=\"lauth-quote\">\"People's dreams never END!\"</p>\r\n      <p className=\"lauth\">- Marshall D. Teach</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}